using System;

class Program
{
    static void Main()
    {
        // Пример использования:
        int[] arr = { 9, 7, 5, 11, 12, 2, 14, 3, 10, 6 };
        
        Console.WriteLine("Исходный массив:");
        PrintArray(arr);

        QuickSort(arr, 0, arr.Length - 1);

        Console.WriteLine("Отсортированный массив:");
        PrintArray(arr);
    }

    static void QuickSort(int[] arr, int low, int high)
    {
        if (low < high)
        {
            int pivotIndex = Partition(arr, low, high);

            QuickSort(arr, low, pivotIndex - 1);
            QuickSort(arr, pivotIndex + 1, high);
        }
    }

    static int Partition(int[] arr, int low, int high)
    {
        int pivot = arr[high];
        int i = low - 1;

        for (int j = low; j < high; j++)
        {
            if (arr[j] < pivot)
            {
                i++;
                Swap(arr, i, j);
            }
        }

        Swap(arr, i + 1, high);

        return i + 1;
    }

    static void Swap(int[] arr, int i, int j)
    {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    static void PrintArray(int[] arr)
    {
        foreach (int num in arr)
        {
            Console.Write(num + " ");
        }

        Console.WriteLine();
    }
}




В данном примере функция QuickSort реализует алгоритм быстрой сортировки, а функция Partition разделяет массив на подмассивы и возвращает индекс опорного элемента. Функция Swap используется для обмена элементами в массиве. Функция PrintArray просто выводит элементы массива на консоль для наглядности.

После запуска программы будет выведен исходный массив, а затем отсортированный массив с помощью алгоритма быстрой сортировки. Вы можете изменить исходный массив, чтобы проверить работу алгоритма на других данных.